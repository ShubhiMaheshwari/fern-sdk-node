/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as ShubhiMaheshwariApi from "../../api";
import * as core from "../../core";

export const PaymentsEntity: core.serialization.ObjectSchema<
    serializers.PaymentsEntity.Raw,
    ShubhiMaheshwariApi.PaymentsEntity
> = core.serialization.object({
    cfPaymentId: core.serialization.property("cf_payment_id", core.serialization.number().optional()),
    orderId: core.serialization.property("order_id", core.serialization.string().optional()),
    entity: core.serialization.string().optional(),
    errorDetails: core.serialization.property(
        "error_details",
        core.serialization.lazyObject(async () => (await import("..")).ErrorDetailsInPaymentsEntity).optional()
    ),
    isCaptured: core.serialization.property("is_captured", core.serialization.boolean().optional()),
    orderAmount: core.serialization.property("order_amount", core.serialization.number().optional()),
    paymentGroup: core.serialization.property("payment_group", core.serialization.string().optional()),
    paymentCurrency: core.serialization.property("payment_currency", core.serialization.string().optional()),
    paymentAmount: core.serialization.property("payment_amount", core.serialization.number().optional()),
    paymentTime: core.serialization.property("payment_time", core.serialization.string().optional()),
    paymentCompletionTime: core.serialization.property(
        "payment_completion_time",
        core.serialization.string().optional()
    ),
    paymentStatus: core.serialization.property(
        "payment_status",
        core.serialization.lazy(async () => (await import("..")).PaymentsEntityPaymentStatus).optional()
    ),
    paymentMessage: core.serialization.property("payment_message", core.serialization.string().optional()),
    bankReference: core.serialization.property("bank_reference", core.serialization.string().optional()),
    authId: core.serialization.property("auth_id", core.serialization.string().optional()),
    authorization: core.serialization
        .lazyObject(async () => (await import("..")).AuthorizationInPaymentsEntity)
        .optional(),
    paymentMethod: core.serialization.property(
        "payment_method",
        core.serialization.lazyObject(async () => (await import("..")).PaymentMethodInPaymentsEntity).optional()
    ),
});

export declare namespace PaymentsEntity {
    interface Raw {
        cf_payment_id?: number | null;
        order_id?: string | null;
        entity?: string | null;
        error_details?: serializers.ErrorDetailsInPaymentsEntity.Raw | null;
        is_captured?: boolean | null;
        order_amount?: number | null;
        payment_group?: string | null;
        payment_currency?: string | null;
        payment_amount?: number | null;
        payment_time?: string | null;
        payment_completion_time?: string | null;
        payment_status?: serializers.PaymentsEntityPaymentStatus.Raw | null;
        payment_message?: string | null;
        bank_reference?: string | null;
        auth_id?: string | null;
        authorization?: serializers.AuthorizationInPaymentsEntity.Raw | null;
        payment_method?: serializers.PaymentMethodInPaymentsEntity.Raw | null;
    }
}
