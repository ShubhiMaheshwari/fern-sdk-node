/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as ShubhiMaheshwariApi from "../../api";
import * as core from "../../core";

export const OrderPayResponse: core.serialization.ObjectSchema<
    serializers.OrderPayResponse.Raw,
    ShubhiMaheshwariApi.OrderPayResponse
> = core.serialization.object({
    cfPaymentId: core.serialization.property("cf_payment_id", core.serialization.number().optional()),
    paymentMethod: core.serialization.property(
        "payment_method",
        core.serialization.lazy(async () => (await import("..")).OrderPayResponsePaymentMethod).optional()
    ),
    channel: core.serialization.lazy(async () => (await import("..")).OrderPayResponseChannel).optional(),
    action: core.serialization.lazy(async () => (await import("..")).OrderPayResponseAction).optional(),
    data: core.serialization.lazyObject(async () => (await import("..")).OrderPayData).optional(),
});

export declare namespace OrderPayResponse {
    interface Raw {
        cf_payment_id?: number | null;
        payment_method?: serializers.OrderPayResponsePaymentMethod.Raw | null;
        channel?: serializers.OrderPayResponseChannel.Raw | null;
        action?: serializers.OrderPayResponseAction.Raw | null;
        data?: serializers.OrderPayData.Raw | null;
    }
}
