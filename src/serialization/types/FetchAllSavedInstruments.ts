/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as ShubhiMaheshwariApi from "../../api";
import * as core from "../../core";

export const FetchAllSavedInstruments: core.serialization.ObjectSchema<
    serializers.FetchAllSavedInstruments.Raw,
    ShubhiMaheshwariApi.FetchAllSavedInstruments
> = core.serialization.object({
    customerId: core.serialization.property("customer_id", core.serialization.string().optional()),
    afaReference: core.serialization.property("afa_reference", core.serialization.number().optional()),
    instrumentId: core.serialization.property("instrument_id", core.serialization.string().optional()),
    instrumentType: core.serialization.property("instrument_type", core.serialization.stringLiteral("card").optional()),
    instrumentUid: core.serialization.property("instrument_uid", core.serialization.string().optional()),
    instrumentDisplay: core.serialization.property("instrument_display", core.serialization.string().optional()),
    instrumentStatus: core.serialization.property(
        "instrument_status",
        core.serialization.lazy(async () => (await import("..")).FetchAllSavedInstrumentsInstrumentStatus).optional()
    ),
    createdAt: core.serialization.property("created_at", core.serialization.string().optional()),
    instrumentMeta: core.serialization.property(
        "instrument_meta",
        core.serialization.lazyObject(async () => (await import("..")).SavedInstrumentMeta).optional()
    ),
});

export declare namespace FetchAllSavedInstruments {
    interface Raw {
        customer_id?: string | null;
        afa_reference?: number | null;
        instrument_id?: string | null;
        instrument_type?: "card" | null;
        instrument_uid?: string | null;
        instrument_display?: string | null;
        instrument_status?: serializers.FetchAllSavedInstrumentsInstrumentStatus.Raw | null;
        created_at?: string | null;
        instrument_meta?: serializers.SavedInstrumentMeta.Raw | null;
    }
}
