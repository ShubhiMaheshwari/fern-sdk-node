/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../..";
import * as ShubhiMaheshwariApi from "../../../../../api";
import * as core from "../../../../../core";

export const CreateLinkRequest: core.serialization.Schema<
    serializers.CreateLinkRequest.Raw,
    ShubhiMaheshwariApi.CreateLinkRequest
> = core.serialization.object({
    linkId: core.serialization.property("link_id", core.serialization.string()),
    linkAmount: core.serialization.property("link_amount", core.serialization.number()),
    linkCurrency: core.serialization.property("link_currency", core.serialization.string()),
    linkPurpose: core.serialization.property("link_purpose", core.serialization.string()),
    customerDetails: core.serialization.property(
        "customer_details",
        core.serialization.lazyObject(async () => (await import("../../../..")).LinkCustomerDetailsEntity)
    ),
    linkPartialPayments: core.serialization.property("link_partial_payments", core.serialization.boolean().optional()),
    linkMinimumPartialAmount: core.serialization.property(
        "link_minimum_partial_amount",
        core.serialization.number().optional()
    ),
    linkExpiryTime: core.serialization.property("link_expiry_time", core.serialization.string().optional()),
    linkNotify: core.serialization.property(
        "link_notify",
        core.serialization.lazyObject(async () => (await import("../../../..")).LinkNotifyEntity).optional()
    ),
    linkAutoReminders: core.serialization.property("link_auto_reminders", core.serialization.boolean().optional()),
    linkNotes: core.serialization.property(
        "link_notes",
        core.serialization.lazy(async () => (await import("../../../..")).LinkNotesEntity).optional()
    ),
    linkMeta: core.serialization.property(
        "link_meta",
        core.serialization.lazyObject(async () => (await import("../../../..")).LinkMetaEntity).optional()
    ),
});

export declare namespace CreateLinkRequest {
    interface Raw {
        link_id: string;
        link_amount: number;
        link_currency: string;
        link_purpose: string;
        customer_details: serializers.LinkCustomerDetailsEntity.Raw;
        link_partial_payments?: boolean | null;
        link_minimum_partial_amount?: number | null;
        link_expiry_time?: string | null;
        link_notify?: serializers.LinkNotifyEntity.Raw | null;
        link_auto_reminders?: boolean | null;
        link_notes?: serializers.LinkNotesEntity.Raw | null;
        link_meta?: serializers.LinkMetaEntity.Raw | null;
    }
}
